#dist: trusty
dist: focal
language: cpp

# sources  list: https://github.com/travis-ci/apt-source-whitelist/blob/master/ubuntu.json,
# packages list: https://github.com/travis-ci/apt-package-whitelist/blob/master/ubuntu-trusty

matrix:
  include:
    # Newest GCC to oldest
    - os: linux
      dist: focal
      compiler: gcc-10
      env: TOOLSET=gcc COMPILER=g++-10 CXXSTD=03,11,14,17,20
      addons:
        apt:
          packages:
            - g++-10
          sources:
            - sourceline: "ppa:ubuntu-toolchain-r/test"

    - os: linux
      dist: focal
      compiler: gcc
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'g++-10' ]
      env: BUILD_TYPE=Debug GXX=10 CXX_STD=20

    - os: linux
      dist: bionic
      compiler: gcc
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'g++-9' ]
      env: BUILD_TYPE=Release GXX=9 CXX_STD=17

    - os: linux
      dist: xenial
      compiler: gcc
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'g++-8' ]
      env: BUILD_TYPE=MinSizeRel GXX=8 CXX_STD=14

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'g++-7' ]
      env: BUILD_TYPE=MinSizeRel GXX=7 CXX_STD=17

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'g++-7' ]
      env: BUILD_TYPE=Release GXX=7 CXX_STD=17
    
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'g++-7' ]
      env: BUILD_TYPE=Debug GXX=7

    - os: linux
      dist: bionic
      compiler: gcc
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'g++-6' ]
      env: BUILD_TYPE=MinSizeRel GXX=6 CXX_STD=14

    - os: linux
      dist: bionic
      compiler: gcc
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'g++-5' ]
      env: BUILD_TYPE=Release GXX=5

    - os: linux
      dist: xenial
      compiler: gcc
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'g++-4.9' ]
      env: BUILD_TYPE=MinSizeRel GXX=4.9

    - os: linux
      dist: bionic
      compiler: gcc
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'g++-4.8' ]
      env: BUILD_TYPE=Release GXX=4.8
    
    - os: linux
      dist: bionic
      compiler: gcc
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'g++-4.8' ]
      env: BUILD_TYPE=Debug GXX=4.8

    # Newest Clang to oldest
    - os: linux
      dist: focal
      compiler: clang-10
      env: TOOLSET=clang COMPILER=clang++-10 CXXSTD=03,11,14,17,20
      addons:
        apt:
          packages:
            - clang-10
            - libstdc++-9-dev
          sources:
            - sourceline: "ppa:ubuntu-toolchain-r/test"
            - sourceline: "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-10 main"
              key_url: "https://apt.llvm.org/llvm-snapshot.gpg.key"

    - os: linux
      #dist: focal
      compiler: clang-10
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test', 'llvm-toolchain-xenial-10' ]
          packages: [ 'clang-10' , 'libstdc++-10-dev' ]
      env: BUILD_TYPE=Debug CLANGXX=10 CXX_STD=03,11,14,17,20

    - os: linux
      dist: bionic
      compiler: clang-9
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test', 'llvm-toolchain-xenial-9 main' ]
          packages: [ 'clang-9' , 'libstdc++-9-dev' ]
      env: BUILD_TYPE=MinSizeRel CLANGXX=9 CXX_STD=03,11,14,17,2a

    - os: linux
      dist: xenial
      compiler: clang-8
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test', 'llvm-toolchain-xenial-8' ]
          packages: [ 'clang-8' , 'libstdc++-8-dev' ]
      env: BUILD_TYPE=Release CLANGXX=8 CXX_STD=03,11,14,17,2a
    
    - os: linux
      dist: xenial
      compiler: clang-7
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test', 'llvm-toolchain-xenial-7 main' ]
          packages: [ 'clang-7' , 'libstdc++-8-dev' ]
      env: BUILD_TYPE=Debug CLANGXX=7 CXX_STD=03,11,14,17,2a

    - os: linux
      #dist: xenial
      compiler: clang
      addons:
        apt:
          #sources: [ 'ubuntu-toolchain-r-test', 'llvm-toolchain-trusty-6.0' ]
          sources: [ 'ubuntu-toolchain-r-test', 'llvm-toolchain-focal-6.0' ]
          packages: [ 'clang-6.0', 'libstdc++-7-dev', 'libstdc++6' ] # C++17 support in libstd++
      env: BUILD_TYPE=MinSizeRel CLANGXX=6.0 CXX_STD=17

    - os: linux
      #dist: xenial
      compiler: clang
      addons:
        apt:
          #sources: [ 'ubuntu-toolchain-r-test', 'llvm-toolchain-trusty-6.0' ]
          sources: [ 'ubuntu-toolchain-r-test', 'llvm-toolchain-focal-6.0' ]
          packages: [ 'clang-6.0', 'libstdc++-7-dev', 'libstdc++6' ] # C++17 support in libstd++
      env: BUILD_TYPE=Release CLANGXX=6.0 CXX_STD=17
    
    - os: linux
      dist: xenial
      compiler: clang
      addons:
        apt:
          #sources: [ 'ubuntu-toolchain-r-test', 'llvm-toolchain-trusty-5.0' ]
          sources: [ 'ubuntu-toolchain-r-test', 'llvm-toolchain-xenial-5.0' ]
          packages: [ 'clang-5.0' ]
      env: BUILD_TYPE=Release CLANGXX=5.0

    - os: linux
      dist: xenial
      compiler: clang
      addons:
        apt:
          #sources: [ 'ubuntu-toolchain-r-test', 'llvm-toolchain-trusty-4.0' ]
          sources: [ 'ubuntu-toolchain-r-test', 'llvm-toolchain-xenial-4.0' ]
          packages: [ 'clang-4.0' ]
      env: BUILD_TYPE=MinSizeRel CLANGXX=4.0

    - os: linux
      dist: xenial
      compiler: clang
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.6' ]
          #sources: [ 'ubuntu-toolchain-r-test', 'llvm-toolchain-trusty-3.6' ]
          packages: [ 'clang-3.6' ]
      env: BUILD_TYPE=Debug CLANGXX=3.6 CXX_STD=14

    - os: linux
      dist: xenial
      compiler: clang
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.6' ]
          #sources: [ 'ubuntu-toolchain-r-test', 'llvm-toolchain-trusty-3.6' ]
          packages: [ 'clang-3.6' ]
      env: BUILD_TYPE=Release CLANGXX=3.6   

# container-based builds
sudo: false

before_install:
  - env
  - export SRC_DIR="`pwd`"
  - if [ "$CXX" = "g++" ]; then export CXX="g++-$GXX" CC="gcc-$GXX"; fi
  - if [ "$CXX" = "clang++" ]; then export CXX="clang++-$CLANGXX" CC="clang-$CLANGXX"; fi

# This will install the latest CMake as of today, update it if needed. 
# This helps to use newer CMake versions in the project and maintain old compiler tests using older linux distributions.
install:
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="https://cmake.org/files/v3.19/cmake-3.19.3-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    elif [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
        which cmake || brew install cmake;
    fi

script:
  - $CXX --version
  - cmake --version
  - mkdir "$TRAVIS_BUILD_DIR/build"
  - cd "$TRAVIS_BUILD_DIR/build"
  - pwd
  - CXX_STD_ARG=""; if [ ! -z "${CXX_STD}" ]; then CXX_STD_ARG="-DCMAKE_CXX_STANDARD=${CXX_STD}"; fi
  - cmake -DCMAKE_BUILD_TYPE=${BUILD_TYPE} ${CXX_STD_ARG} "$SRC_DIR"
  - make -j2 # cores according to https://docs.travis-ci.com/user/reference/overview/
  - CTEST_OUTPUT_ON_FAILURE=1 make test
  - test/benchmark_cppcodec
